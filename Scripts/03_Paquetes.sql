--READ
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_TB_OBTENER_SP(P_RESULTADO OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN P_RESULTADO FOR 
        SELECT * FROM FIDE_FACTURA_TB;
END FIDE_CATEGORIA_TB_OBTENER_SP;

--INSERT
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_TB_INSERTAR_SP (
    P_NOMBRE IN VARCHAR2
) AS
BEGIN
    INSERT INTO FIDE_CATEGORIA_TB (
        CATEGORIA_ID, 
        NOMBRE
    )
    VALUES (
        FIDE_CATEGORIA_SEQ.NEXTVAL, 
        P_NOMBRE
    );
     COMMIT;
END FIDE_CATEGORIA_TB_INSERTAR_SP;

--UPDATE
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_ACTUALIZAR_SP(
    P_CATEGORIA_ID IN NUMBER,
    P_NOMBRE IN VARCHAR2
)
IS
BEGIN
    UPDATE FIDE_CATEGORIA_TB
    SET NOMBRE = P_NOMBRE
    WHERE CATEGORIA_ID = P_CATEGORIA_ID;
    COMMIT;
END FIDE_CATEGORIA_ACTUALIZAR_SP;

--DELETE
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_ELIMINAR_SP(P_CATEGORIA_ID IN NUMBER) AS
    BEGIN
        DELETE FROM FIDE_CATEGORIA_TB
        WHERE CATEGORIA_ID = P_CATEGORIA_ID;
        COMMIT;
    END FIDE_CATEGORIA_ELIMINAR_SP;
    
    CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_TB_GET_BY_ID(
    V_CURSOR OUT SYS_REFCURSOR,
    V_ID NUMBER
)
AS
BEGIN
    OPEN V_CURSOR FOR
        SELECT * 
        FROM FIDE_CATEGORIA_TB
        WHERE CATEGORIA_ID = V_ID; 
END FIDE_CATEGORIA_TB_GET_BY_ID;


-----------------------
ALTER TABLE FIDE_CATEGORIA_TB
ADD (
    CREADO_POR VARCHAR2(100),
    FECHA_CREACION DATE,
    MODIFICADO_POR VARCHAR2(100),
    FECHA_MODIFICACION DATE,
    ESTADO VARCHAR(10),
    ACCION VARCHAR(100)
);


--TRIGGERS FECHA CREACIÓN Y MMODIFICACIÓN
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_TB_CREACION_FECHA_MODIFICACION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIA_TB
FOR EACH ROW
BEGIN
IF INSERTING THEN
:NEW.FECHA_CREACION:=SYSTIMESTAMP;
ELSE
:NEW.FECHA_MODIFICACION:=SYSTIMESTAMP;
END IF;
END;

--TRIGGERS AUTORES
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_CREACION_MODIFICACION_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIA_TB
FOR EACH ROW
BEGIN
IF INSERTING THEN
:NEW.CREADO_POR:=USER;
ELSE
:NEW.MODIFICADO_POR:=USER;
END IF;
END;

--TRIGGERS ACCIONES
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIA_TB
FOR EACH ROW
BEGIN
IF INSERTING THEN
:NEW.ACCION:='INSERT';
ELSE
:NEW.ACCION:='UPDATE';
END IF;
END;

--TRIGGERS ESTADOS
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_ESTADO_TRG
BEFORE INSERT ON FIDE_CATEGORIA_TB
FOR EACH ROW
BEGIN
:NEW.ESTADO:='ACTIVO';
END;
    